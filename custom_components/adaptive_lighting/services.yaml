apply:
  description: Applies the current Adaptive Lighting settings to lights.
  fields:
    entity_id:
      description: entity_id of the Adaptive Lighting switch.
      example: switch.adaptive_lighting_default
    lights:
      description: "entity_id(s) of lights, default: lights of the switch"
      example: light.bedroom_ceiling
    transition:
      description: Transition of the lights.
      example: 10
    adapt_brightness:
      description: "Adapt the 'brightness', default: true"
      example: true
    adapt_color:
      description: "Adapt the color_temp/color_rgb, default: true"
      example: true
    prefer_rgb_color:
      description: "Prefer to use color_rgb over color_temp if possible, default: false"
      example: false
    turn_on_lights:
      description: "Turn on the lights that are off, default: false"
      example: false
set_manual_control:
  description: Mark whether a light is 'manually controlled'.
  fields:
    entity_id:
      description: entity_id of the Adaptive Lighting switch.
      example: switch.adaptive_lighting_default
    manual_control:
      description: "Whether to add ('true') or remove ('false') the light from the 'manual_control' list, default: true"
      example: true
    lights:
      description: entity_id(s) of lights, if not specified, all lights in the switch are selected.
      example: light.bedroom_ceiling
change_sunlight_settings:
  description: Reinitializes sunlight settings with new values for the specific switch
  fields:
    entity_id:
      description: entity_id of the Adaptive Lighting switch.
      example: switch.adaptive_lighting_default
      required: true
      selector:
        entity:
          domain: switch
    use_config_defaults:
      description: "Any setting in this service call that isn't EXPLICITLY defined will either default back to the config (True) or the previous values (False)"
      example: false
      required: false
      default: false
      selector:
        boolean:
    use_actual_sunrise_time:
      description: "Erase manual handling of the sunrise time (if any) and calculates the actual sunrise"
      example: false
      required: false
      default: false
      selector:
        boolean:
    use_actual_sunset_time:
      description: "Erase manual handling of the sunset time (if any) and calculates the actual sunset"
      example: false
      required: false
      default: false
      selector:
        boolean:
    max_brightness:
      description: "max_brightness, in %"
      example: 100
      required: false
      selector:
        text:
    max_color_temp:
      description: max_color_temp, in Kelvin
      example: 5500
      required: false
      selector:
        text:
    min_brightness:
      description: min_brightness, in %
      example: 1
      required: false
      selector:
        text:
    min_color_temp:
      description: min_color_temp, in Kelvin
      example: 2000
      required: false
      selector:
        text:
    sleep_brightness:
      description: sleep_brightness, in %
      example: 1
      required: false
      selector:
        text:
    sleep_color_temp:
      description: sleep_color_temp, in Kelvin
      example: 1000
      required: false
      selector:
        text:
    sunrise_offset:
      description: sunrise_offset, in +/- seconds (HH:MM:SS)
      example: 02:00:00
      required: false
      selector:
        text:
    sunrise_time:
      description: sunrise_time, in 'HH:MM:SS' format (if 'None', it uses the actual sunrise time at your location)
      example: 07:00:00
      required: false
      selector:
        time:
    sunset_offset:
      description: sunset_offset, in +/- seconds (HH:MM:SS)
      example: 04:00:00
      required: false
      selector:
        text:
    sunset_time:
      description: sunset_time, in 'HH:MM:SS' format (if 'None', it uses the actual sunset time at your location)
      example: 06:00:00
      required: false
      selector:
        time:
    transition:
      description: transition, in seconds
      example: 1
      required: false
      selector:
        text:
change_switch_settings:
  description: "Change any settings you'd like in the switch. All options here are the same as in the config flow."
  fields:
    entity_id:
      description: "entity_id of the Adaptive Lighting switch."
      example: switch.adaptive_lighting_default
      required: true
      selector:
        entity:
          domain: switch
    use_defaults:
      description: "You can set this to 'factory', 'configuration', or 'current' to reset the variables not being set with this service call. 'current' leaves them as is, 'configuration' resets to whatever already initializes at startup, 'factory' resets to the default values listed in the documentation."
      example: "current"
      required: false
      selector:
        text:
    lights:
      example: light.bedroom_ceiling
      selector:
        entity:
          domain: light
    adapt_brightness:
      description: "Adapt the 'brightness', default: true"
      example: true
      required: false
      selector:
        boolean:
    adapt_color:
      description: "Adapt the color_temp/color_rgb, default: true"
      example: true
      required: false
      selector:
        boolean:
    turn_on_lights:
      description: "Turn on the lights that are off, default: false"
      example: false
      required: false
      selector:
        boolean:
    initial_transition:
      description: "initial_transition: When lights turn 'off' to 'on'. (seconds)"
      required: false
      selector:
        text:
    sleep_transition:
      description: "sleep_transition: When 'sleep_state' changes. (seconds)"
      required: false
      selector:
        text:
    interval:
      description: "interval: Time between switch updates. (seconds)"
      required: false
      selector:
        text:
    max_brightness:
      description: "max_brightness: Highest brightness of lights during a cycle. (%)"
      required: false
      selector:
        text:
    max_color_temp:
      description: "max_color_temp: Coldest hue of the color temperature cycle. (Kelvin)"
      required: false
      selector:
        text:
    min_brightness:
      description: "min_brightness: Lowest brightness of lights during a cycle. (%)"
      required: false
      selector:
        text:
    min_color_temp:
      description: "min_color_temp, Warmest hue of the color temperature cycle. (Kelvin)"
      required: false
      selector:
        text:
    only_once:
      description: "only_once: Only adapt the lights when turning them on."
      example: false
      required: false
      selector:
        boolean:
    prefer_rgb_color:
      description: "prefer_rgb_color: Use 'rgb_color' rather than 'color_temp' when possible."
      required: false
      selector:
        boolean:
    separate_turn_on_commands:
      description: "separate_turn_on_commands: Separate the commands for each attribute (color, brightness, etc.) in 'light.turn_on' (required for some lights)."
      required: false
      selector:
        boolean:
    send_split_delay:
      description: "send_split_delay: wait between commands (milliseconds), when separate_turn_on_commands is used. May ensure that both commands are handled by the bulb correctly."
      required: false
      selector:
        boolean:
    sleep_brightness:
      description: "sleep_brightness, Brightness setting for Sleep Mode. (%)"
      required: false
      selector:
        text:
    sleep_rgb_or_color_temp:
      description: "sleep_rgb_or_color_temp, use 'rgb_color' or 'color_temp'"
      required: false
      selector:
        text:
    sleep_rgb_color:
      description: "sleep_rgb_color, in RGB"
      required: false
      selector:
        text:
    sleep_color_temp:
      description: "sleep_color_temp: Color temperature setting for Sleep Mode. (Kelvin)"
      required: false
      selector:
        text:
#    sunrise_offset:
#      description: "sunrise_offset: How long before(-) or after(+) to define the sunrise point of the cycle (+/- seconds)"
#    sunrise_time:
#      description: "sunrise_time: Manual override of the sunrise time, if 'None', it uses the actual sunrise time at your location (HH:MM:SS)"
#    max_sunrise_time:
#      description: "max_sunrise_time: Manual override of the maximum sunrise time, if 'None', it uses the actual sunrise time at your location (HH:MM:SS)"
#    sunset_offset:
#      description: "sunset_offset: How long before(-) or after(+) to define the sunset point of the cycle (+/- seconds)"
#    sunset_time:
#      description: "sunset_time: Manual override of the sunset time, if 'None', it uses the actual sunrise time at your location (HH:MM:SS)"
#    min_sunset_time:
#      description: "min_sunset_time: Manual override of the minimum sunset time, if 'None', it uses the actual sunset time at your location (HH:MM:SS)"
    take_over_control:
      description: "take_over_control: If anything but Adaptive Lighting calls 'light.turn_on' when a light is already on, stop adapting that light until it (or the switch) toggles off -> on."
      required: false
      selector:
        boolean:
    detect_non_ha_changes:
      description: "detect_non_ha_changes: detects all >10% changes made to the lights (also outside of HA), requires 'take_over_control' to be enabled (calls 'homeassistant.update_entity' every 'interval'!)"
      required: false
      selector:
        boolean:
    transition:
      description: "Transition time when applying a change to the lights (seconds)"
      required: false
      selector:
        text:
    adapt_delay:
      description: "adapt_delay: wait time between light turn on (seconds), and Adaptive Lights applying changes to the light state. May avoid flickering."
      required: false
      selector:
        text: