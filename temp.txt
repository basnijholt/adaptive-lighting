    name = (not CONF_NAME in data[CONF_NAME] and not defaults and cur._name) or (not defaults and data[CONF_NAME]) or defaults[CONF_NAME]
    lights = (not CONF_LIGHTS in data[CONF_LIGHTS] and not defaults and cur._lights) or (not defaults and data[CONF_LIGHTS]) or defaults[CONF_LIGHTS]

    detect_non_ha_changes = (not CONF_DETECT_NON_HA_CHANGES in data[CONF_DETECT_NON_HA_CHANGES] and not defaults and cur._detect_non_ha_changes) or (not defaults and data[CONF_DETECT_NON_HA_CHANGES]) or defaults[CONF_DETECT_NON_HA_CHANGES]
    initial_transition = (not CONF_INITIAL_TRANSITION in data[CONF_INITIAL_TRANSITION] and not defaults and cur._initial_transition) or (not defaults and data[CONF_INITIAL_TRANSITION]) or defaults[CONF_INITIAL_TRANSITION]
    sleep_transition = (not CONF_SLEEP_TRANSITION in data[CONF_SLEEP_TRANSITION] and not defaults and cur._sleep_transition) or (not defaults and data[CONF_SLEEP_TRANSITION]) or defaults[CONF_SLEEP_TRANSITION]
    interval = (not CONF_INTERVAL in data[CONF_INTERVAL] and not defaults and cur._interval) or (not defaults and data[CONF_INTERVAL]) or defaults[CONF_INTERVAL]
    only_once = (not CONF_ONLY_ONCE in data[CONF_ONLY_ONCE] and not defaults and cur._only_once) or (not defaults and data[CONF_ONLY_ONCE]) or defaults[CONF_ONLY_ONCE]
    prefer_rgb_color = (not CONF_PREFER_RGB_COLOR in data[CONF_PREFER_RGB_COLOR] and not defaults and cur._prefer_rgb_color) or (not defaults and data[CONF_PREFER_RGB_COLOR]) or defaults[CONF_PREFER_RGB_COLOR]
    separate_turn_on_commands = (not CONF_SEPARATE_TURN_ON_COMMANDS in data[CONF_SEPARATE_TURN_ON_COMMANDS] and not defaults and cur._separate_turn_on_commands) or (not defaults and data[CONF_SEPARATE_TURN_ON_COMMANDS]) or defaults[CONF_SEPARATE_TURN_ON_COMMANDS]
    take_over_control = (not CONF_TAKE_OVER_CONTROL in data[CONF_TAKE_OVER_CONTROL] and not defaults and cur._take_over_control) or (not defaults and data[CONF_TAKE_OVER_CONTROL]) or defaults[CONF_TAKE_OVER_CONTROL]
    transition = (not CONF_TRANSITION in data[CONF_TRANSITION] and not defaults and cur._transition) or (not defaults and data[CONF_TRANSITION]) or defaults[CONF_TRANSITION]
    adapt_delay = (not CONF_ADAPT_DELAY in data[CONF_ADAPT_DELAY] and not defaults and cur._adapt_delay) or (not defaults and data[CONF_ADAPT_DELAY]) or defaults[CONF_ADAPT_DELAY]
    send_split_delay = (not CONF_SEND_SPLIT_DELAY in data[CONF_SEND_SPLIT_DELAY] and not defaults and cur._send_split_delay) or (not defaults and data[CONF_SEND_SPLIT_DELAY]) or defaults[CONF_SEND_SPLIT_DELAY]

    astral_location = sun_light_settings.astral_location
    max_brightness = (not CONF_MAX_BRIGHTNESS in data[CONF_MAX_BRIGHTNESS] and not defaults and sun_light_settings.max_brightness) or (not defaults and data[CONF_MAX_BRIGHTNESS]) or defaults[CONF_MAX_BRIGHTNESS]
    max_color_temp = (not CONF_MAX_COLOR_TEMP in data[CONF_MAX_COLOR_TEMP] and not defaults and sun_light_settings.max_color_temp) or (not defaults and data[CONF_MAX_COLOR_TEMP]) or defaults[CONF_MAX_COLOR_TEMP]
    min_brightness = (not CONF_MIN_BRIGHTNESS in data[CONF_MIN_BRIGHTNESS] and not defaults and sun_light_settings.min_brightness) or (not defaults and data[CONF_MIN_BRIGHTNESS]) or defaults[CONF_MIN_BRIGHTNESS]
    min_color_temp = (not CONF_MIN_COLOR_TEMP in data[CONF_MIN_COLOR_TEMP] and not defaults and sun_light_settings.min_color_temp) or (not defaults and data[CONF_MIN_COLOR_TEMP]) or defaults[CONF_MIN_COLOR_TEMP]
    sleep_brightness = (not CONF_SLEEP_BRIGHTNESS in data[CONF_SLEEP_BRIGHTNESS] and not defaults and sun_light_settings.sleep_brightness) or (not defaults and data[CONF_SLEEP_BRIGHTNESS]) or defaults[CONF_SLEEP_BRIGHTNESS]
    sleep_color_temp = (not CONF_SLEEP_COLOR_TEMP in data[CONF_SLEEP_COLOR_TEMP] and not defaults and sun_light_settings.sleep_color_temp) or (not defaults and data[CONF_SLEEP_COLOR_TEMP]) or defaults[CONF_SLEEP_COLOR_TEMP]
    sleep_rgb_color = (not CONF_SLEEP_RGB_COLOR in data[CONF_SLEEP_RGB_COLOR] and not defaults and sun_light_settings.sleep_rgb_color) or (not defaults and data[CONF_SLEEP_RGB_COLOR]) or defaults[CONF_SLEEP_RGB_COLOR]
    sleep_rgb_or_color_temp = (not CONF_SLEEP_RGB_OR_COLOR_TEMP in data[CONF_SLEEP_RGB_OR_COLOR_TEMP] and not defaults and sun_light_settings.sleep_rgb_or_color_temp) or (not defaults and data[CONF_SLEEP_RGB_OR_COLOR_TEMP]) or defaults[CONF_SLEEP_RGB_OR_COLOR_TEMP]
    sunrise_offset = (not CONF_SUNRISE_OFFSET in data[CONF_SUNRISE_OFFSET] and not defaults and sun_light_settings.sunrise_offset) or (not defaults and data[CONF_SUNRISE_OFFSET]) or defaults[CONF_SUNRISE_OFFSET]
    
    # pylint: disable=protected-access
    object.__setattr__(self, "detect_non_ha_changes", detect_non_ha_changes)
    object.__setattr__(self, "initial_transition", initial_transition)
    object.__setattr__(self, "sleep_transition", sleep_transition)
    object.__setattr__(self, "interval", interval)
    object.__setattr__(self, "only_once", only_once)
    object.__setattr__(self, "prefer_rgb_color", prefer_rgb_color)
    object.__setattr__(self, "separate_turn_on_commands", separate_turn_on_commands)
    object.__setattr__(self, "take_over_control", take_over_control)
    object.__setattr__(self, "transition", transition)
    object.__setattr__(self, "adapt_delay", adapt_delay)
    object.__setattr__(self, "send_split_delay", send_split_delay)
    object.__setattr__(self, "detect_non_ha_changes", detect_non_ha_changes)

    object.__setattr__(switch, '_sun_light_settings', SunLightSettings(
        name=name,
        astral_location=astral_location,
        max_brightness=max_brightness,
        max_color_temp=max_color_temp,
        min_brightness=min_brightness,
        min_color_temp=min_color_temp,
        sleep_brightness=sleep_brightness,
        sleep_color_temp=sleep_color_temp,
        sleep_rgb_color=sleep_rgb_color,
        sleep_rgb_or_color_temp=sleep_rgb_or_color_temp,
        sunrise_offset=sunrise_offset,
        sunrise_time=sunrise_time,
        max_sunrise_time=max_sunrise_time,
        sunset_offset=sunset_offset,
        sunset_time=sunset_time,
        min_sunset_time=min_sunset_time,
        time_zone=hass.config.time_zone,
        transition=transition,
    ))
    # pylint: enable=protected-access